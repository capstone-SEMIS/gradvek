# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:

  push:
   branches: 
    - 'master'
  pull_request:
   branches:
    - 'master'

jobs:  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Set up nodejs environment
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'springdb/frontend/**/package-lock.json'
    - name: Build with Maven
      run: |
        cd springdb
        mvn -DskipTests install
#        ./mvnw -B package --file pom.xml

    - name: Upload back end artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend
        path: springdb/target/*.jar

    - name: Create front end archive
      run: tar -zcf frontend.tar.gz springdb/frontend

    - name: Upload front end artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: frontend.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: "Set up nodejs environment"
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'springdb/frontend/**/package-lock.json'

    - name: Run application tests
      run: |
        cd springdb
        mvn -Dtest="SpringdbApplicationTests" test

    - name: Run end-to-end tests
      run: |
        cd springdb
        mvn -Dtest="EndToEndTests" test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download back end artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend

      - name: Move back end files to expected location
        run: mkdir -p springdb/target && mv *.jar springdb/target

      - name: Download front end artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend

      - name: Move front end files to expected location
        run: tar -xzf frontend.tar.gz

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest
